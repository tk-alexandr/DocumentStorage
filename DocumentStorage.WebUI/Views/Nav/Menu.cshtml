@model DocumentStorage.WebUI.Models.NavMenuViewModel


<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="/">ХРАНИЛИЩЕ ДОКУМЕНТОВ</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    @if (ViewBag.isAuthorized) {  
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                @Html.ActionLink("Домой", "", "", null, new { @class = "nav-link"})
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown1" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Новый документ
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown1">
                    @Html.ActionLink("Создать", "Create", "Document", null, new { @class = "dropdown-item" })
                    @Html.ActionLink("Загрузить с ПК", "Upload", "Document", null, new { @class = "dropdown-item" })
                </div>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Аккаунт: @ViewBag.UserName 
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown2">
                    @Html.ActionLink("Выход", "Logout", "Account", null, new { @class = "dropdown-item" })
                </div>
            </li>

        </ul>

        @{
            List<SelectListItem> dropDownItems = new List<SelectListItem>();
            foreach (var item in @Model.ListFilterInfo.SearchAmoungOptions)
            {
                dropDownItems.Add(new SelectListItem
                {
                    Text = item.Value,
                    Value = item.Key,
                    Selected = @Model.ListFilterInfo.SearchAmoung == item.Key
                });

            }
        }
        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-inline my-2 my-lg-0" }))
        {
            <label class="text-light m-1" for="searchFromSelect">Искать: </label>
            @Html.DropDownListFor(m => m.ListFilterInfo.SearchAmoung, dropDownItems, new { @class = "form-control mr-sm-2", @id = "searchFromSelect" })
            @Html.TextBoxFor(m => m.ListFilterInfo.SearchString, new { @class = "form-control mr-sm-2", @placeholder="Поиск" })            
            <button class="btn btn-outline-primary my-2 my-sm-0" type="submit" name="SubmitFilter" value="1">Поиск</button>
        }
       
    </div>
    }
</nav>